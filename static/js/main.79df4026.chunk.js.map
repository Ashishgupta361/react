{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","_useState","useState","_useState2","Object","slicedToArray","inputs","setInputs","handleChange","event","name","target","value","values","objectSpread","defineProperty","react_default","a","createElement","class","onSubmit","preventDefault","alert","type","username","onChange","age","onClick","c","parseInt","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"iNAuFeA,MAjFf,WAAe,IAAAC,EACeC,mBAAS,IADxBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNK,EADMH,EAAA,GACEI,EADFJ,EAAA,GAGPK,EAAe,SAACC,GACpB,IAAMC,EAAOD,EAAME,OAAOD,KACpBE,EAAQH,EAAME,OAAOC,MAC3BL,EAAU,SAAAM,GAAM,OAAAT,OAAAU,EAAA,EAAAV,CAAA,GAAUS,EAAVT,OAAAW,EAAA,EAAAX,CAAA,GAAmBM,EAAOE,OA6B5C,OACEI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,MAAM,OAAV,kBACAH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,YAGEF,EAAAC,EAAAC,cAAA,QAAME,SAjCS,SAACX,GACpBA,EAAMY,iBACNC,MAAM,eAgCAN,EAAAC,EAAAC,cAAA,mCACEF,EAAAC,EAAAC,cAAA,SACEK,KAAK,SACLb,KAAK,WACLE,MAAON,EAAOkB,UAAY,GAC1BC,SAAUjB,KAGdQ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,oCACEF,EAAAC,EAAAC,cAAA,SACEK,KAAK,SACLb,KAAK,MACLE,MAAON,EAAOoB,KAAO,GACrBD,SAAUjB,KAGdQ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOK,KAAK,YAIdP,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,UAAQS,QApDF,WACV,IAAIC,EAAIC,SAASvB,EAAOkB,UAAYK,SAASvB,EAAOoB,KACpDJ,MAAM,UAAYM,KAkDd,OAEAZ,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,UAAQS,QAlDH,WACT,IAAIC,EAAIC,SAASvB,EAAOkB,UAAYK,SAASvB,EAAOoB,KACpDJ,MAAM,iBAAmBM,KAgDrB,SAEAZ,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,UAAQS,QAhDF,WACV,IAAIC,EAAIC,SAASvB,EAAOkB,UAAYK,SAASvB,EAAOoB,KACpDJ,MAAM,qBAAuBM,KA8CzB,YAEAZ,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,UAAQS,QA9CF,WACV,IAAIC,EAAIC,SAASvB,EAAOkB,UAAYK,SAASvB,EAAOoB,KACpDJ,MAAM,eAAiBM,KA4CnB,eCrEOE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH/B,EAAAC,EAAAC,cAACF,EAAAC,EAAM+B,WAAP,KACEhC,EAAAC,EAAAC,cAAC+B,EAAD,QAOJnB","file":"static/js/main.79df4026.chunk.js","sourcesContent":["import './App.css';\nimport { useState } from 'react';\nimport React from 'react';\n\n\n\nfunction App() {\n  const [inputs, setInputs] = useState({});\n\n  const handleChange = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n    setInputs(values => ({ ...values, [name]: value }))\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    alert('submitted');\n  }\n\n  const add = () => {\n    let c = parseInt(inputs.username) + parseInt(inputs.age);\n    alert('sum is ' + c);\n\n  };\n  const st = () => {\n    let c = parseInt(inputs.username) - parseInt(inputs.age);\n    alert('Difference is ' + c);\n\n  };\n  const st1 = () => {\n    let c = parseInt(inputs.username) * parseInt(inputs.age);\n    alert('Multiplication is ' + c);\n\n  };\n  const st2 = () => {\n    let c = parseInt(inputs.username) / parseInt(inputs.age);\n    alert('Division is ' + c);\n\n  };\n\n  return (\n    <div>\n      <h1 class=\"con\">Calculator App</h1>\n      <br></br>\n      <span>\n\n\n        <form onSubmit={handleSubmit}>\n          <label>Enter first number:\n            <input\n              type=\"number\"\n              name=\"username\"\n              value={inputs.username || \"\"}\n              onChange={handleChange}\n            />\n          </label>\n          <br></br>\n          <label>Enter second number:\n            <input\n              type=\"number\"\n              name=\"age\"\n              value={inputs.age || \"\"}\n              onChange={handleChange}\n            />\n          </label>\n          <br></br>\n          <input type=\"submit\" />\n        </form>\n\n\n        <h3>Addition</h3>\n        <button onClick={add}>Sum</button>\n\n        <h3>Subtraction</h3>\n        <button onClick={st}>Minus</button>\n\n        <h3>Multiplication</h3>\n        <button onClick={st1}>Multiply</button>\n\n        <h3>Divide</h3>\n        <button onClick={st2}>Division</button>\n      </span>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}